I want to create a website that will be a SaaS. The idea is that I'll gather images/videos from various sources, I'll use machine learning to understand what objects are in the media gathered and create a list of the objects seen. There will be a list created for each image/video. There are "rules" that are made of a mixture of possible objects, for example "shoes" && "jeans" && "T-shirt", that can be created easily on the website. The idea is to take every list of objects in each media file and to check if all the objects from 1 "rule" or more appear in the media file.  If there is a at least 1 "rule" related to the media file, a ticket will be opened and an alert would be sent to the user. The ticket should be taken care of by the user in a set amount of time according to the importance of the "rule" - the importance would be labeled at the scale 1-10 so that 10 would be the most important. If the media file is related to more than 1 "rule", then the highest importance of the "rules" that are related to it would be the importance of the ticket. The tickets won't be closed automatically, they will be closed by the user after doing the required actions. For importance 1-5 there would be 24 hours to complete the actions, for importance 6-8 there would be 8 hours and for 9-10 there would be 4 hours.

There should be 3 main databases related to data gathered, tickets, and rules. The fields of every object in them should be as said:
1. Media database: ID, release date, acquiring date, user gathered from, user gathered from ID, object list, media file
2. Rules database: ID, creation date, items list, description, ACTIVE/SILENT, user created, manager approved, importance, users related to, ENABLED/DISABLED
3. Tickets database: ID, creation date, expiration date, user gathered from, user managing, related rules list, importance, users related to, status, FP/TP, kabam related, unit related
Notes: at first, the kabam related and the unit related to should have a value of something like "need to be related". The idea is that a user will look at the ticket and will be able to adjust the user and the unit related to by himself so that the initial values should be something like unrelated at first but will be edited. The tickets' expiration dates should be created according to the importance of the rules that are related to them. Every rule that is DISABLED won't be a rule to be checked (if an object list has the same values as that rule), only ENABLED rules would be checked.

There should be a navigation bar on the top of screen. The labels in the navigation bar should direct the users to every screen by clicking on them. On the left, there should be the name of the system, Morfius and clicking on it should redirect the user to the Merkaz Dashboard screen (will tell how it should look). The other labels are "Kabam Dashboard", "Merkaz Tickets", "Kabam Tickets", "Users", "Upload Profiles", "Query Profiles", "Profile Report", "Manage Rules", "Rules Performance".

There should be screens and the abilities in them should be as following:
1. Merkaz Dashboard: a screen used to get a general look about what is related to the Merkaz. There should be 4 labels in the same row that show how many tickets are in total, how many of them are in high secerity (6+), how many are in the status of "in progress" and how many Kabam users are related to the system. There should be 2 more graphs in the same row (other than the row from before) that the first of them show a pi chart of how many tickets are in each status (done, in progress, FP, waiting for identification, not related yet, reopened) and the other one should be a bar charts that shows how many tickets are related to the 24 rules that appear the most. If there are less than 24 rules with at least 1 ticket related to, then show only rules that have at least 1 ticket related to. There should be 2 graphs in the same row (other than the row from before) that the first of them show a bar chart of the 4 Kabam users that have the most tickets related to them and the other one should be a bar chart of the amount of tickets from every importance (grouped by 1-5, 6-8 and 9-10). If there are less than 4 kabams with at least 1 ticket related to them, then show only kabams that have at least 1 ticket related to them.

2. Kabam Dashboard: a screen used to get a general look about what is related to the Merkaz. There should be 4 labels in the same row that show how many tickets related to this kabam are in total, how many of them are in high secerity (6+), how many of them are in the status of "in progress" and how many units are involved in these open tickets. There should be 2 more graphs in the same row (other than the row from before) that the first of them show a pi chart of how many tickets (again, related to this kabam) are in each status (done, in progress, FP, waiting for identification, not related yet, reopened) and the other one should be a bar charts that shows how many tickets are related to the 10 rules that appear the most. If there are less than 10 rules with at least 1 ticket related to, then show only rules that have at least 1 ticket related to. There should be 2 graphs in the same row (other than the row from before) that the first of them show a bar chart of the 4 units that have the most tickets related to them and the other one should be a bar chart of the amount of tickets from every importance (grouped by 1-5, 6-8 and 9-10). If there are less than 4 units with at least 1 ticket related to them, then show only units that have at least 1 ticket related to them.
Basically should have the same design of the Merkaz Dashboard with some modifications.

3. Merkaz Tickets: a screen used to filter and look at tickets that are related to the Merkaz. The should be 4 filters to use, all of them should be seen in the same line - by statuses (done, in progress, FP, waiting for identification, not related yet, reopened), by kabams, by rules and by severity (grouped by 1-5, 6-8 and 9-10). Each filter can be used by the options related to it (rules - the possibilities are all the rules, kabams - the possibilities are all the kabams). There should be a possibility to filter by some filters simultaneously (for example, a ticket that is related to rule a, with severity 1-5, related to kabam b). There should be labels of all the tickets created by the system when the user enters to the page (show the ones that are with the status not related yet). The user can click on the label and should have the options to change the tickets status, to relate it to a kabam/ to himself. The label should have the details of the user gathered from, the rules related to (the IDs and the descriptions, separated by a ","). Every label of a ticket should show it's status at the top left corner, the importance of it in the top right corner and the details below it. The media file that triggered the rules related to should be seen in the middle of the label.

4. Kabam Tickets: a screen used to filter and look at tickets that are related to the kabam. The should be 4 filters to use, all of them should be seen in the same line - by statuses (done, in progress, FP, waiting for identification, not related yet, reopened), by units, by rules and by severity (grouped by 1-5, 6-8 and 9-10). Each filter can be used by the options related to it (rules - the possibilities are all the rules, units - the possibilities are all the units related to the kabam). There should be a possibility to filter by some filters simultaneously (for example, a ticket that is related to rule a, with severity 1-5, related to unit b). There should be labels of all the tickets created by the system when the user enters to the page (show the ones that are with the status not related yet). The user can click on the label and should have the options to change the tickets status, to relate it to a kabam under him/ to himself and to relate it to the right unit. The label should have the details of the user gathered from, the rules related to (the IDs and the descriptions, separated by a ","). Every label of a ticket should show it's status at the top left corner, the importance of it in the top right corner and the details below it. The media file that triggered the rules related to should be seen in the middle of the label.
Basically should have the same design of the Merkaz Tickets with some modifications.

5. Users: a screen used to look at system users and their details. There should be a search bar and a group filter to filter by. A system administrator should be able to reset a user's password and to delete the user from the database. There should be a capability to add a user as well. The options in permission group are Kabam, System Administrator and Merkaz Nitur.

6. Upload Profiles: Leave that for now.

7. Query Profiles: Leave that for now.

8. Profile Report: Leave that for now.

9. Manage Rules: a screen used to get all details about the rules in the system and to edit them. There should be an ability to add a new rule, to search for rules by description. There should be a possibility to filter rules be ID/ enforcement (PASSIVE/ACTIVE), importance (by options 1-10, can choose some values), date created (insert a range). A system admin and a MANAGER can add rules and to approve rules requests. 

10. Rules Performance: a screen used to get a general look at rules' performances. There should be possibilities to filter the watched rules by their IDs, there should be a way to show their performances during the last 7/30/90 days (choose an option). There should be 3 labels in the same row that show the 3 rules that have the most relations to tickets. If there are less than 3 rules with at least 1 ticket related to them, then show only rules that have at least 1 ticket related to them. In each label, show how many tickets are related to this rule, how many of them are FP (by precents) and how many of them are TP (by precents). Below the labels, show in a graph performances over time - show values of precents of TP values and FP values in every day in the time period selected before (7/30/90 days).

There should be 2 main databases related to the system users. The fields of every object in them should be as said:
1. Merkaz users: full name, username, email, password, MANAGER/WORKER, tickets managing
2. Kabam users: full name, username, email, password, tickets managing, units under
3. System admins: full name, username, email, password, tickets managing
Notes: managers can approve and create rules and workers can ask to create rules. The managers can look at all of the tickets (kabam related tickets and Merkaz related tickets). System admins are above everyone in terms of capabilities. There are many kabam users and there can be a stuation in which a kabam is under another kabam. The superior kabam should be able to see his tickets and the tickets related to kabams under him.
